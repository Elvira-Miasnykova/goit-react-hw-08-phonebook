{"version":3,"file":"static/js/265.9b325a93.chunk.js","mappings":"yMAaaA,EAAMC,EAAAA,EAAAA,IAAH,6FACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,yICrBSC,EAAcX,EAAAA,EAAAA,MAAH,0HACT,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IAKLe,EAAYjB,EAAAA,EAAAA,MAAD,qJAAyB,SAAAY,GAAC,OAAIA,EAAEC,MAAMK,QAAQC,MAApB,IAClC,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IACA,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,MAAMH,MAAlB,IAER,SAAAP,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IAGO,SAAAU,GAAC,OAAIA,EAAEC,MAAMO,OAAOG,MAAnB,IAMNC,EAAaxB,EAAAA,EAAAA,OAAD,wSAAyB,SAAAY,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IACpC,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACE,SAAAJ,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IACA,SAAAU,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IACA,SAAAU,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IACJ,SAAAU,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IACA,SAAAU,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IACP,SAAAU,GAAC,OAAIA,EAAEC,MAAMK,QAAQC,MAApB,IACM,SAAAP,GAAC,OAAIA,EAAEC,MAAMS,MAAMH,MAAlB,IAIP,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,OAAOK,KAAnB,IACU,SAAAb,GAAC,OAAIA,EAAEC,MAAMO,OAAOG,MAAnB,I,SChCVG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,UAAC7B,EAAA,EAAD,CAAK8B,GAAG,OAAOC,MAAM,QAAQC,SAdV,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,GACES,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAGsDC,aAAa,MAAMC,GAAG,QAASrC,OAAO,SAASsC,aAAa,SAASC,YAAY,SAASC,QAAQ,QAAQnC,EAAG,EAAGoC,GAAI,EAAzK,WACE,UAACrC,EAAD,uBAEQ,SAACM,EAAD,CACIgC,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACNC,MAAM,8DAGpB,UAACxC,EAAD,oBAEQ,SAACM,EAAD,CACIgC,KAAK,QACLZ,KAAK,QACLa,QAAQ,iDAGpB,UAACvC,EAAD,uBAEQ,SAACM,EAAD,CACIgC,KAAK,WACLZ,KAAK,WACLa,QAAQ,uCACRC,MAAM,uGAGlB,SAAC3B,EAAD,CAAcyB,KAAK,SAAnB,wBAGL,ECpCD,EAXqB,WACnB,OACE,UAAClD,EAAA,EAAD,CAAK8B,GAAG,MAAMkB,QAAQ,OAAOK,eAAe,SAA5C,WACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAC3B,EAAD,MAGL,C","sources":["components/Box.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Regisration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n } from 'styled-system'\n\nexport const Box = styled.div`\n  ${color}\n  ${space}\n  ${layout}\n  ${flexbox}\n  ${grid}\n  ${background}\n  ${border}\n  ${position}\n  ${shadow}\n  ${typography}\n`","import styled from '@emotion/styled';\n\nexport const LabelStyled = styled.label` \nfont-family: ${p => p.theme.fonts.body};\nfont-size: ${p => p.theme.fontSizes[2]}px;\nmargin-bottom: ${p => p.theme.space[3]}px;\ndisplay: block;\ntext-align: left;\n`;\n\nexport const InputStyled=styled.input` border: ${p => p.theme.borders.normal};\nborder-color: ${p => p.theme.colors.black};\nborder-radius: ${p => p.theme.radii.normal};\nwidth: 98%;\nheight: ${p => p.theme.space[5]}px;\n\n:hover {\n  border-color: ${p => p.theme.colors.accent};\n}\n\n;\n`;\n\nexport const ButtonStyled=styled.button` color: ${p => p.theme.colors.black};\nfont-family: ${p => p.theme.fonts.body};\nfont-size: ${p => p.theme.fontSizes[2]}px;\npadding-left: ${p => p.theme.space[3]}px;\npadding-right: ${p => p.theme.space[3]}px;\npadding-bottom: ${p => p.theme.space[2]}px;\npadding-top: ${p => p.theme.space[2]}px;\nmargin-right: ${p => p.theme.space[3]}px;\nborder: ${p => p.theme.borders.normal};\nborder-radius: ${p => p.theme.radii.normal};\ncursor: pointer;\n\n:hover {\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.accent};\n};\n`;\n\n","import { Box } from 'components/Box';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { LabelStyled, InputStyled, ButtonStyled } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Box as=\"form\" width=\"320px\" onSubmit={handleSubmit} autoComplete=\"off\" bg=\"muted\"  border=\"normal\" borderRadius=\"normal\" borderColor=\"accent\" display=\"block\" p={3} mb={3}>\n      <LabelStyled>\n        Username\n              <InputStyled\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name must contain only letters(uppercase, lowercase).\"\n              />\n      </LabelStyled>\n      <LabelStyled>\n        Email\n              <InputStyled\n                  type=\"email\"\n                  name=\"email\"\n                  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n              />\n      </LabelStyled>\n      <LabelStyled>\n        Password\n              <InputStyled\n                  type=\"password\"\n                  name=\"password\"\n                  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                  title=\"Password must contain one  number and one uppercase and lowercase letter, 8 or more characters\"\n              />\n      </LabelStyled>\n      <ButtonStyled type=\"submit\">Register</ButtonStyled>\n    </Box>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Box } from 'components/Box';\n\n\nconst Registration = () => {\n  return (\n    <Box as=\"div\" display=\"flex\" justifyContent=\"center\">\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Box>\n  )\n};\n\nexport default Registration;\n\n\n\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","shadow","typography","LabelStyled","p","theme","fonts","body","fontSizes","InputStyled","borders","normal","colors","black","radii","accent","ButtonStyled","white","RegisterForm","dispatch","useDispatch","as","width","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","bg","borderRadius","borderColor","display","mb","type","pattern","title","justifyContent","Helmet"],"sourceRoot":""}