{"version":3,"file":"static/js/654.c619178d.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/Form/Form.styled.js","redux/contacts/selectors.js","components/Form/Form.jsx","components/Contacts/ContactsList.styled.js","components/Contacts/ContactsList.jsx","components/Title/Title.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from '@emotion/styled';\n\nexport const LabelStyled = styled.label`\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: block;\n    text-align: left;\n`;\n\nexport const InputStyled = styled.input`\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.black};\n    border-radius: ${p => p.theme.radii.normal};\n    width: 98%;\n    height: ${p => p.theme.space[5]}px;\n    :hover{\n        border-color: ${p => p.theme.colors.accent};\n    };\n`;\n\nexport const ButtonStyled = styled.button`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[2]}px;\n    padding-top: ${p => p.theme.space[2]}px;\n    margin-right: ${p => p.theme.space[3]}px;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.normal};\n    cursor: pointer;\n    :hover{\n        color: ${p => p.theme.colors.white};\n        background-color: ${p => p.theme.colors.accent};\n    };\n`;","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import { useState } from \"react\";\n\nimport { nanoid } from 'nanoid';\nimport { Box } from \"../Box\";\nimport { LabelStyled, InputStyled, ButtonStyled } from \"./Form.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { getContacts } from \"redux/contacts/selectors\";\n\nexport function Form() { \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    \n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        };\n        \n    };\n\n    const addNewContact = (newContact) => {\n    const foundContact = contacts.find(contact => contact.name === newContact.name);\n    \n    (foundContact)\n      ? window.alert(`${newContact.name} is alredy in contacts`)\n      : dispatch(addContact(newContact))\n    console.log(addContact(newContact));\n  };\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const newContact = {\n            name: e.currentTarget.name.value,\n            number: e.currentTarget.number.value,\n            id: nanoid(),\n        };\n        setName('');\n        setNumber('');\n        addNewContact(newContact);\n        console.log(newContact);\n        \n\n    };\n\n    \n    \n        return (\n            <Box as=\"form\" onSubmit={handleSubmit} bg=\"muted\"  border=\"normal\" borderRadius=\"normal\" borderColor=\"accent\" display=\"block\" p={3} mb={3} >\n                <LabelStyled>\n                    Name\n                    <InputStyled\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={handleChange}\n                    />\n                </LabelStyled>\n                <LabelStyled>\n                    Number\n                    <InputStyled\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={handleChange}\n                    />\n                </LabelStyled>\n                <ButtonStyled type=\"submit\">Add contact</ButtonStyled>\n            </Box>\n        );\n \n}","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.li`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: flex;\n    align-items: center;\n`;\n\nexport const ContactDescription = styled.p`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const ContactButton = styled.button`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[2]}px;\n    padding-right: ${p => p.theme.space[2]}px;\n    padding-bottom: ${p => p.theme.space[1]}px;\n    padding-top: ${p => p.theme.space[1]}px;\n    margin-right: ${p => p.theme.space[0]}px;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.normal};\n    cursor: pointer;\n    margin-left: auto;\n`;","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { ContactItem, ContactButton, ContactDescription } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n\n    const contactDelete = (contactId) => {\n        dispatch(deleteContact(contactId))\n    };\n\n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLocaleLowerCase();\n    //console.log('normalizedFilter',normalizedFilter);\n        return contacts.filter(contact => (contact.name.toLocaleLowerCase().includes(normalizedFilter)))\n    };\n\n    const visibleContacts = getVisibleContacts();\n    \n    return (\n        <ul>\n            {visibleContacts.map((contact) => \n                 <ContactItem key={contact.id}>\n                        <ContactDescription>{contact.name}:</ContactDescription>\n                        <ContactDescription>{contact.number}</ContactDescription>\n                        <ContactButton type=\"button\" onClick={() => contactDelete(contact.id)}>Delete</ContactButton>\n                    </ContactItem>\n            )}\n        </ul>\n    )\n};\n\nContactsList.prototype = {\n    contacts: PropTypes.arrayOf(PropTypes.exact({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    })).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Header = styled.h1`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[6]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Title = styled.h2`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[5]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n`;","import styled from '@emotion/styled';\n\nexport const LabelStyled = styled.label`\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: block;\n    text-align: left;\n`;\n\nexport const InputStyled = styled.input`\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.black};\n    border-radius: ${p => p.theme.radii.normal};\n    width: 60%;\n    height: ${p => p.theme.space[5]}px;\n    :hover{\n        border-color: ${p => p.theme.colors.accent};\n    };\n`;","import PropTypes from 'prop-types';\nimport { Box } from \"components/Box\";\nimport { LabelStyled, InputStyled } from \"./Filter.styled\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.filter);\n\n    const changeFilter = (e) => {\n    dispatch(setFilter(e.currentTarget.value))\n    console.log('setFilter', setFilter(e.currentTarget.value));\n    };\n    \n    return (\n        <Box mb={4}>\n            <LabelStyled>\n                Find contacts by name\n                <InputStyled type=\"text\" value={filter} onChange={changeFilter}/>\n            </LabelStyled>\n        </Box>\n    )\n};\n\nFilter.prototype = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};","import { Form } from '../components/Form/Form';\nimport { ContactsList } from '../components/Contacts/ContactsList';\nimport { Title, Header } from '../components/Title/Title.styled';\nimport { Filter } from '../components/Filter/Filter';\nimport { Box } from '../components/Box';\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  \n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  \n  return (\n    <Box display=\"flex\" flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      bg=\"muted\" p={3} border=\"normal\" borderColor=\"lightGray\" borderRadius=\"normal\"\n      width=\"80%\" boxShadow=\"0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16)\" textAlign=\"center\" margin=\"0 auto\">\n      <Box as=\"div\" >\n        <Header>Phonebook</Header>\n        <Form />\n      </Box>\n\n      <Box as=\"div\" >\n        <Title>Contacts</Title>\n        <Filter />\n        {isLoading && !error && <Loader/>}\n        {error && <p> {error} </p>}\n        <ContactsList />\n      </Box>\n    </Box>\n  )\n};\n\nexport default Contacts;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","LabelStyled","styled","p","theme","fonts","body","fontSizes","space","InputStyled","borders","normal","colors","black","radii","accent","ButtonStyled","white","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","Form","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","Box","as","onSubmit","preventDefault","newContact","find","contact","window","alert","addContact","console","log","addNewContact","bg","border","borderRadius","borderColor","display","mb","type","pattern","title","required","onChange","ContactItem","ContactDescription","ContactButton","ContactsList","visibleContacts","normalizedFilter","toLocaleLowerCase","includes","getVisibleContacts","map","onClick","contactId","deleteContact","prototype","PropTypes","isRequired","onDeleteContact","Header","Title","Filter","setFilter","useEffect","fetchContacts","flexDirection","justifyContent","width","boxShadow","textAlign","margin","Loader","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}